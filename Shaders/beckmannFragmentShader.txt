#version 400

uniform vec3 ka;
uniform vec3 kd;
uniform vec3 ks;
uniform float beckmann_m;


uniform vec3 La;
uniform vec3 Ld; 
uniform vec3 Ls; 

float pi = 3.1415926535897932384626433832795;

in vec3 N;
in vec3 L;
in vec3 H;

void main()
{
	vec3 _N = normalize(N);
	vec3 _L = normalize(L);
	vec3 _H = normalize(H);

	vec3 Ia = La * ka;

	float dot_diffuse = dot(_L, _N);
	dot_diffuse = max(dot_diffuse, 0.0f);

	vec3 Id = Ld * kd * dot_diffuse;




	float dot_spec = dot (_N, _H);

	float alpha = acos(dot_spec);

	float m2 = pow(beckmann_m, 2);

	float top = tan(alpha);
	top = pow(top, 2);
	top = top/m2;
	top = 0-top;
	top = exp(top);

	float bot = cos(alpha);
	bot = pow(bot, 4);
	bot = pi*m2*bot;

	float specular_factor = top/bot;





	vec3 Is = Ls * ks * specular_factor; // final specular intensity
	





	vec3 LightIntensity = Ia + Id + Is;


	gl_FragColor = vec4 (LightIntensity, 1.0);

}